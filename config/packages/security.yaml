security:
    password_hashers:
        # use your user class name here
        App\Entity\User:
            # Use native password hasher, which auto-selects the best
            # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
            algorithm: auto
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        app_user_provider: #le provider est la bdd ==> in_database
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            #anonymous: true
            lazy: true
           # provider: users_in_memory
            provider: app_user_provider
            custom_authenticator:
                - App\Security\LoginAuthenticator
            logout:
                path: /logout
                target: /
                # where to redirect after logout
                # target: app_any_route

           # configure the maximum login attempts in a custom period of time
            #login_throttling:
            #    max_attempts: 3
            #    interval: '15 minutes'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }

    #encoders :
        #Symfony\Component\Security\Core\User\User : plaintext